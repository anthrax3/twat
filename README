====== What The Frak & License ======

This is a project for a seminar at the Hochschule fuer Gestaltung Karlsruhe.
Feel free to use it within the bounds of the following license:

Copyright (c) 2009 Matthias Richter

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name(s) of the above 
copyright holders shall not be used in advertising or otherwise
to promote the sale, use or other dealings in this Software 
without prior written authorization.

====== Building ======
Step 0: Get and install the following:
    
   * PortAudio           (http://www.portaudio.com/)
   * FLite               (http://www.speech.cs.cmu.edu/flite/)
   * cURL                (http://curl.haxx.se/)

Step 1:   Edit Makefile according to your needs.
Step 2:   $ make

====== Running ======
Step 1: Run server: ./twats [port]
Step 2: See what devices you have: ./twatc
Setp 3: For every device you have, do something like this:

         while [ 0 ]; do ./twatc [ipaddr] [port] [device]; done;

Step 4: Enjoy till annoyed

Every run of ./twatc will play one tweet per channel and then quit.
I am not happy with this, as most tweets are not of equal length and
thus one channel will be silent before the other one finishes.
The reason for this is a crappy USB sound card I got off eBay, which
randomly crashes twat. In the final application, this hopefully won't
matter that much...

====== External Libraries ======
For getting tweets from twitter, the twitter API Was used. This
API Uses JSON (http://json.org/) as its data format. Since I
did not want to write a parser myself, a stripped down version of
the excellent cJSON library (http://sourceforge.net/projects/cjson/)
was used to do so.
